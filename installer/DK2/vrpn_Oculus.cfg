# vrpn.cfg SAMPLE for VRPN version pre-07.34

################################################################################
# There are two versions of this driver, which use the same hardware but it
# two different modes.
#
# vrpn_Oculus_DK2_inertial: Oculus DK2 inertial measurement unit only.  This
#  provides access to the magnetometer readings on the unit and has a different
#  set of exported values.
#
# The LEDs device exports an Analog interface, with the following channels:
#  0: Uncalibrated temperature (degrees Celsius?)
#  1: Report ID counter that goes up to 65535 and then cycles back to 0
#  2: Uncalibrated accelerometer X component (positive to left ear) (m/s/s)
#  3: Uncalibrated accelerometer Y component (positive down to feet) (m/s/s)
#  4: Uncalibrated accelerometer Z component (positive forward) (m/s/s)
#  5: Uncalibrated gyro X component (positive rotating head up) (radians/sec?)
#  6: Uncalibrated gyro Y component (positive rotating head left) (radians/sec?)
#  7: Uncalibrated gyro Z component (positive tilting head left) (radians/sec?)
#  8: Uncalibrated Magnetometer X component (positive to left ear) (varied, asymmetric range)
#  9: Uncalibrated Magnetometer Y component (positive down to feet) (varied, asymmetric range)
#  10: Uncalibrated Magnetometer Z component (positive forward) (varied, asymmetric range)
#
# vrpn_Oculus_DK2_LEDs: Oculus with LEDs enabled, which would enable reading
#  from its camera to determine position.  Note that the program reading from
#  the camera will have to put the camera into synchronous mode using a
#  special command before its results will line up with the LED flashing.
#
# The LEDs device exports an Analog interface, with the following channels:
#  0: Uncalibrated temperature (degrees Celsius?)
#  1: Report ID counter that goes up to 65535 and then cycles back to 0
#  2: Uncalibrated accelerometer X component (positive to left ear) (m/s/s)
#  3: Uncalibrated accelerometer Y component (positive down to feet) (m/s/s)
#  4: Uncalibrated accelerometer Z component (positive forward) (m/s/s)
#  5: Uncalibrated gyro X component (positive rotating head up) (radians/sec?)
#  6: Uncalibrated gyro Y component (positive rotating head left) (radians/sec?)
#  7: Uncalibrated gyro Z component (positive tilting head left) (radians/sec?)
#  8: Uncalibrated Magnetometer X component (positive to left ear) (varied, asymmetric range)
#  9: Uncalibrated Magnetometer Y component (positive down to feet) (varied, asymmetric range)
#  10: Uncalibrated Magnetometer Z component (positive forward) (varied, asymmetric range)
#  11: Time since device power-on (seconds)
#
# NOTE: The Oculus drivers may interfere with this raw driver if they are
#       installed on the system.
#
# NOTE: A side effect of running this driver is that the HMDI output for the
#       DK2 will become visible to the system if it is plugged in.  If it is
#       in DirectMode, it will not appear as a system display.  If it is not,
#       it will show up as another display.
#
# NOTE: The magnetometer ranges on each axis are different, and they are not
#       symmetric around 0 for any of the axes, so the HKD needs to have been
#       rotated around a lot to really have an idea of which way is North.  A
#       tracker based on this value needs to keep track of the extrema.
#       Also, the magnetic North vector does not point straight along the
#       plane of the ground, but rather into the Earth.
#
# Arguments:
#	char	name_of_this_device[]

vrpn_Oculus_DK2_inertial Oculus0
#vrpn_Oculus_DK2_LEDs Oculus0

################################################################################
# Magnetometer.  This is an analog that is intended to be used on top of
# an analog that reads values from a 3-axis magnetometer.
#   It could be used on top of any analog device, in fact.
#   This device basically takes in analog signals and puts out analog
# values that are a unit vector.
#   One analog channel is associated with each axis (X, Y, Z)
# For each axis, the value is scaled to a the correct orientation but the
# magnitude will be normalized and offset to fit the largest range of values
# ever received for that axis (self-calibrated).
#   NOTE: The vector will not point perpendicular to gravity.
#
# The device exports an Analog interface, with the following channels:
#  0: X component of normalized, autocalibrated vector
#  1: Y component of normalized, autocalibrated vector
#  2: Z component of normalized, autocalibrated vector
#
#   Arguments:
#	char  name_of_this_device[]
#	float update_rate_to_send_analog_reports
#	[one lines follows, describing the X Y Z, with:
#		char	name_of_analog_device[]		(start with * for local)
#		int	x_channel_of_analog_device
#		float	x_offset					(value ignored)
#		float	x_scale
#		int	y_channel_of_analog_device
#		float	y_offset					(value ignored)
#		float	y_scale
#		int	z_channel_of_analog_device
#		float	z_offset					(value ignored)
#		float	z_scale
#	]

#vrpn_IMU_Magnetometer Magnetometer0 100.0
#*Oculus0 8 0 -1.0 9 0 -1.0 10 0 -1.0

################################################################################
# Inertial-measurement combiner.  This is a tracker that combines
# analog values from inertial measurement units and reports orientation
# and orientation velocity.
#   One analog device is associated with an accelerometer, one with
# a rotational linear measurement device, and (optionally) one with
# a magnetometer.
#
# The device exports a Tracker interface with one sensor.
#
#   Arguments:
#	char  name_of_this_device[]
#	float update_rate_to_send_reports
#	[two lines follow, describing the accelerometer and rotational inputs:
#		char	name_of_analog_device[]		(start with * for local)
#		int	x_channel_of_analog_device
#		float	x_offset
#		float	x_scale
#		int	y_channel_of_analog_device
#		float	y_offset
#		float	y_scale
#		int	z_channel_of_analog_device
#		float	z_offset
#		float	z_scale
#	]
#	A third following line gives the name of the magnetometer, or the
#	 name NULL if one is not used.  The name starts with * for a device
#	 that should be connected to on the same VRPN connection object
#	 being used for the output.

vrpn_IMU_SimpleCombiner Tracker0 400.0
*Oculus0 2 0 -1.0 3 0 -1.0 4 0 -1.0
*Oculus0 5 0 1.0 6 0 1.0 7 0 1.0
NULL
